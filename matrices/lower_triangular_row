//lower triangular matrix using row major mapping:
#include <stdio.h>
#include <iostream>
#include <stdlib.h>

using namespace std;

struct matrix{
    int *A;
    int n;
};

void set(struct matrix *m, int i,int j, int x){ // x is the element we want to set
    if(i>=j){
        m->A[i*(i-1)/2+j-1]=x;
    }
}

int get(struct matrix m, int i,int j){ // x is the element we want to set
    if(i>=j){
        return m.A[i*(i-1)/2+j-1]; // setting the element
    }else{
        return 0; //returning zero because in diagonal matrix other elements will be zero
    }
}

void display_matrix(struct matrix m){
    int i,j;

    for(i=1;i<=m.n;i++){
        for(j=1;j<=m.n;j++){
            if(i>=j){
                printf("%d ", m.A[i*(i-1)/2+j-1]);
            }else{
                printf("0 ");
            }
        }
        printf("\n");
    }
}

int main() {
    struct matrix m;
    int i,j,x;

    printf("Enter dimension: ");

    scanf("%d",&m.n);
    m.A=(int *)malloc(m.n*(m.n+1)/2*sizeof(int)); // no.of non-zero elements

    printf("Enter all elements: ");
    for(i=1;i<=m.n;i++){
        for(j=1;j<=m.n;j++){
            scanf("%d",&x);
            set(&m,i,j,x);
        }
    }   

    printf("\n");
    display_matrix(m);

    return 0;
}